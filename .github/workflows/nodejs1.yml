name: Create PR for foundations-documentation

on:
  release:
    types: [published, edited]

env:
  GH_PAT: ${{ secrets.GH_PAT }}
  API_GITHUB_ENDPOINT: https://api.github.com
  MAIN_REPO: vuhuucuong/repo-action
  DOC_REPO: vuhuucuong/foundations-documentation

jobs:
  create-pr-update-doc:
    runs-on: ubuntu-latest

    steps:
      - name: Install jq (json parser)
        run: |
          sudo apt-get install jq

      - name: Get current tags
        run: |
          echo "::set-env name=CURRENT_TAG::${GITHUB_REF#refs/tags/}" && \
          echo "CURRENT_TAG is ${GITHUB_REF#refs/tags/}"

      - name: Get current release name (title)
        run: |
          curl -s \
          --request GET \
          --url "${API_GITHUB_ENDPOINT}/repos/${MAIN_REPO}/releases/tags/${CURRENT_TAG}" \
          --header "authorization: Bearer ${GH_PAT}" \
          | jq ".name" \
          | xargs -I {} echo "::set-env name=CURRENT_RELEASE_NAME::{}"

      - name: Checking out foundation repo to $GITHUB_WORKSPACE
        if: endsWith(env.CURRENT_RELEASE_NAME, '_released')
        uses: actions/checkout@v2

      - name: Setup NodeJS
        if: endsWith(env.CURRENT_RELEASE_NAME, '_released')
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Get yarn cache location
        if: endsWith(env.CURRENT_RELEASE_NAME, '_released')
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Get yarn cache
        if: endsWith(env.CURRENT_RELEASE_NAME, '_released')
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install depedencies
        if: endsWith(env.CURRENT_RELEASE_NAME, '_released')
        run: yarn install --frozen-lockfile

      - name: Git Clone foundations-documentation repo
        if: endsWith(env.CURRENT_RELEASE_NAME, '_released')
        uses: actions/checkout@v2
        with:
          repository: ${{ env.DOC_REPO }}
          path: ${{ env.DOC_CLONE_PATH }}

      - name: Run script
        if: endsWith(env.CURRENT_RELEASE_NAME, '_released')
        run: |
          ls $DOC_CLONE_PATH
